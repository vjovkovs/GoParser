// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/tts/v1/tts.proto

package ttsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request a single synthesis job; server streams bytes of ONE audio file.
type SynthesizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`                                        // raw text to speak
	Voice         string                 `protobuf:"bytes,2,opt,name=voice,proto3" json:"voice,omitempty"`                                      // e.g., "af_heart"
	SampleRateHz  int32                  `protobuf:"varint,3,opt,name=sample_rate_hz,json=sampleRateHz,proto3" json:"sample_rate_hz,omitempty"` // e.g., 24000
	AudioFormat   string                 `protobuf:"bytes,4,opt,name=audio_format,json=audioFormat,proto3" json:"audio_format,omitempty"`       // "wav" (recommended), "pcm_s16le", "mp3"
	Speed         float32                `protobuf:"fixed32,5,opt,name=speed,proto3" json:"speed,omitempty"`                                    // 1.0 = normal
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynthesizeRequest) Reset() {
	*x = SynthesizeRequest{}
	mi := &file_api_tts_v1_tts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynthesizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthesizeRequest) ProtoMessage() {}

func (x *SynthesizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tts_v1_tts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthesizeRequest.ProtoReflect.Descriptor instead.
func (*SynthesizeRequest) Descriptor() ([]byte, []int) {
	return file_api_tts_v1_tts_proto_rawDescGZIP(), []int{0}
}

func (x *SynthesizeRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SynthesizeRequest) GetVoice() string {
	if x != nil {
		return x.Voice
	}
	return ""
}

func (x *SynthesizeRequest) GetSampleRateHz() int32 {
	if x != nil {
		return x.SampleRateHz
	}
	return 0
}

func (x *SynthesizeRequest) GetAudioFormat() string {
	if x != nil {
		return x.AudioFormat
	}
	return ""
}

func (x *SynthesizeRequest) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type AudioChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audio         []byte                 `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioChunk) Reset() {
	*x = AudioChunk{}
	mi := &file_api_tts_v1_tts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioChunk) ProtoMessage() {}

func (x *AudioChunk) ProtoReflect() protoreflect.Message {
	mi := &file_api_tts_v1_tts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioChunk.ProtoReflect.Descriptor instead.
func (*AudioChunk) Descriptor() ([]byte, []int) {
	return file_api_tts_v1_tts_proto_rawDescGZIP(), []int{1}
}

func (x *AudioChunk) GetAudio() []byte {
	if x != nil {
		return x.Audio
	}
	return nil
}

// NEW: voice catalog + alias support
type Voice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                             // canonical Kokoro voice id, e.g., "af_heart"
	LangCode      string                 `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"` // Kokoro pipeline code, e.g., "a" (American English)
	Gender        string                 `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`                     // "male" | "female" | "" (unknown)
	Display       string                 `protobuf:"bytes,4,opt,name=display,proto3" json:"display,omitempty"`                   // human-friendly name, e.g., "Heart (American Female)"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Voice) Reset() {
	*x = Voice{}
	mi := &file_api_tts_v1_tts_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Voice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voice) ProtoMessage() {}

func (x *Voice) ProtoReflect() protoreflect.Message {
	mi := &file_api_tts_v1_tts_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voice.ProtoReflect.Descriptor instead.
func (*Voice) Descriptor() ([]byte, []int) {
	return file_api_tts_v1_tts_proto_rawDescGZIP(), []int{2}
}

func (x *Voice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Voice) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *Voice) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Voice) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

type Alias struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alias         string                 `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`                 // e.g., "en-us"
	MapsTo        string                 `protobuf:"bytes,2,opt,name=maps_to,json=mapsTo,proto3" json:"maps_to,omitempty"` // e.g., "af_heart"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Alias) Reset() {
	*x = Alias{}
	mi := &file_api_tts_v1_tts_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alias) ProtoMessage() {}

func (x *Alias) ProtoReflect() protoreflect.Message {
	mi := &file_api_tts_v1_tts_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alias.ProtoReflect.Descriptor instead.
func (*Alias) Descriptor() ([]byte, []int) {
	return file_api_tts_v1_tts_proto_rawDescGZIP(), []int{3}
}

func (x *Alias) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Alias) GetMapsTo() string {
	if x != nil {
		return x.MapsTo
	}
	return ""
}

type ListVoicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVoicesRequest) Reset() {
	*x = ListVoicesRequest{}
	mi := &file_api_tts_v1_tts_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVoicesRequest) ProtoMessage() {}

func (x *ListVoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_tts_v1_tts_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVoicesRequest.ProtoReflect.Descriptor instead.
func (*ListVoicesRequest) Descriptor() ([]byte, []int) {
	return file_api_tts_v1_tts_proto_rawDescGZIP(), []int{4}
}

type ListVoicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Voices        []*Voice               `protobuf:"bytes,1,rep,name=voices,proto3" json:"voices,omitempty"`
	Aliases       []*Alias               `protobuf:"bytes,2,rep,name=aliases,proto3" json:"aliases,omitempty"` // optional convenience so clients can show shortcuts
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVoicesResponse) Reset() {
	*x = ListVoicesResponse{}
	mi := &file_api_tts_v1_tts_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVoicesResponse) ProtoMessage() {}

func (x *ListVoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_tts_v1_tts_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVoicesResponse.ProtoReflect.Descriptor instead.
func (*ListVoicesResponse) Descriptor() ([]byte, []int) {
	return file_api_tts_v1_tts_proto_rawDescGZIP(), []int{5}
}

func (x *ListVoicesResponse) GetVoices() []*Voice {
	if x != nil {
		return x.Voices
	}
	return nil
}

func (x *ListVoicesResponse) GetAliases() []*Alias {
	if x != nil {
		return x.Aliases
	}
	return nil
}

var File_api_tts_v1_tts_proto protoreflect.FileDescriptor

const file_api_tts_v1_tts_proto_rawDesc = "" +
	"\n" +
	"\x14api/tts/v1/tts.proto\x12\x06tts.v1\"\x9c\x01\n" +
	"\x11SynthesizeRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x14\n" +
	"\x05voice\x18\x02 \x01(\tR\x05voice\x12$\n" +
	"\x0esample_rate_hz\x18\x03 \x01(\x05R\fsampleRateHz\x12!\n" +
	"\faudio_format\x18\x04 \x01(\tR\vaudioFormat\x12\x14\n" +
	"\x05speed\x18\x05 \x01(\x02R\x05speed\"\"\n" +
	"\n" +
	"AudioChunk\x12\x14\n" +
	"\x05audio\x18\x01 \x01(\fR\x05audio\"f\n" +
	"\x05Voice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tlang_code\x18\x02 \x01(\tR\blangCode\x12\x16\n" +
	"\x06gender\x18\x03 \x01(\tR\x06gender\x12\x18\n" +
	"\adisplay\x18\x04 \x01(\tR\adisplay\"6\n" +
	"\x05Alias\x12\x14\n" +
	"\x05alias\x18\x01 \x01(\tR\x05alias\x12\x17\n" +
	"\amaps_to\x18\x02 \x01(\tR\x06mapsTo\"\x13\n" +
	"\x11ListVoicesRequest\"d\n" +
	"\x12ListVoicesResponse\x12%\n" +
	"\x06voices\x18\x01 \x03(\v2\r.tts.v1.VoiceR\x06voices\x12'\n" +
	"\aaliases\x18\x02 \x03(\v2\r.tts.v1.AliasR\aaliases2\x89\x01\n" +
	"\x03TTS\x12=\n" +
	"\n" +
	"Synthesize\x12\x19.tts.v1.SynthesizeRequest\x1a\x12.tts.v1.AudioChunk0\x01\x12C\n" +
	"\n" +
	"ListVoices\x12\x19.tts.v1.ListVoicesRequest\x1a\x1a.tts.v1.ListVoicesResponseB/Z-github.com/vjovkovs/GoParser/api/tts/v1;ttsv1b\x06proto3"

var (
	file_api_tts_v1_tts_proto_rawDescOnce sync.Once
	file_api_tts_v1_tts_proto_rawDescData []byte
)

func file_api_tts_v1_tts_proto_rawDescGZIP() []byte {
	file_api_tts_v1_tts_proto_rawDescOnce.Do(func() {
		file_api_tts_v1_tts_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_tts_v1_tts_proto_rawDesc), len(file_api_tts_v1_tts_proto_rawDesc)))
	})
	return file_api_tts_v1_tts_proto_rawDescData
}

var file_api_tts_v1_tts_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_tts_v1_tts_proto_goTypes = []any{
	(*SynthesizeRequest)(nil),  // 0: tts.v1.SynthesizeRequest
	(*AudioChunk)(nil),         // 1: tts.v1.AudioChunk
	(*Voice)(nil),              // 2: tts.v1.Voice
	(*Alias)(nil),              // 3: tts.v1.Alias
	(*ListVoicesRequest)(nil),  // 4: tts.v1.ListVoicesRequest
	(*ListVoicesResponse)(nil), // 5: tts.v1.ListVoicesResponse
}
var file_api_tts_v1_tts_proto_depIdxs = []int32{
	2, // 0: tts.v1.ListVoicesResponse.voices:type_name -> tts.v1.Voice
	3, // 1: tts.v1.ListVoicesResponse.aliases:type_name -> tts.v1.Alias
	0, // 2: tts.v1.TTS.Synthesize:input_type -> tts.v1.SynthesizeRequest
	4, // 3: tts.v1.TTS.ListVoices:input_type -> tts.v1.ListVoicesRequest
	1, // 4: tts.v1.TTS.Synthesize:output_type -> tts.v1.AudioChunk
	5, // 5: tts.v1.TTS.ListVoices:output_type -> tts.v1.ListVoicesResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_tts_v1_tts_proto_init() }
func file_api_tts_v1_tts_proto_init() {
	if File_api_tts_v1_tts_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_tts_v1_tts_proto_rawDesc), len(file_api_tts_v1_tts_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tts_v1_tts_proto_goTypes,
		DependencyIndexes: file_api_tts_v1_tts_proto_depIdxs,
		MessageInfos:      file_api_tts_v1_tts_proto_msgTypes,
	}.Build()
	File_api_tts_v1_tts_proto = out.File
	file_api_tts_v1_tts_proto_goTypes = nil
	file_api_tts_v1_tts_proto_depIdxs = nil
}
