name: crawl

on:
  workflow_dispatch:
    inputs:
      start_url:
        description: 'Start URL to parse'
        required: true
        type: string
      max_pages:
        description: 'Max pages to parse'
        required: false
        default: '1'
        type: string
      user_agent:
        description: 'User-Agent header'
        required: false
        default: 'Go-Parser/1.0 (+https://github.com/vjovkovs/goparser)'
        type: string
      out_dir:
        description: 'Output directory'
        required: false
        default: 'out'
        type: string

jobs:
  build-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Tidy & download deps
        working-directory: ./goparser
        run: |
          go mod tidy
          go test ./...

      - name: Run parser
        working-directory: ./goparser
        run: |
          go run ./cmd/gwp \
            --url="${{ inputs.start_url }}" \
            --max="${{ inputs.max_pages }}" \
            --ua="${{ inputs.user_agent }}" \
            --out="${{ inputs.out_dir }}"
        env:
          # Optional example if you need a token later:
          # MY_API_TOKEN: ${{ secrets.MY_API_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: parsed-output
          path: goparser/${{ inputs.out_dir }}/
          if-no-files-found: warn
